name: 'OpenConnect Action'
description: 'Sets up OpenConnect VPN and connects to a VPN server.'
inputs:
  fortissl:
    description: 'Set to true for FortiSSL VPN connection'
    required: true
    default: 'false'
  user:
    description: 'VPN Username (required for FortiSSL)'
    required: false
  password:
    description: 'VPN Password (required for FortiSSL)'
    required: false
  host:
    description: 'VPN Host (e.g., vpn.example.com)'
    required: false
  port:
    description: 'VPN Port (default is 443)'
    required: false
    default: '443'
  servercert:
    description: 'Server certificate to validate the server (optional)'
    required: false
    default: ''
  custom_command:
    description: 'Custom authentication command (only used for FortiSSL)'
    required: false

runs:
  using: 'composite'
  steps:

    - name: Change apt cache directory permissions
      shell: bash
      run: sudo chmod -R a+rw /var/cache/apt

    - name: Cache apt packages
      uses: actions/cache@v3
      with:
        path: /var/cache/apt
        key: ${{ runner.os }}-apt-${{ hashFiles('/etc/apt/sources.list', '/etc/apt/apt.conf', '/etc/apt/preferences') }}
        restore-keys: |
          ${{ runner.os }}-apt-

    - name: Install dependencies
      shell: bash
      run: |
        sudo apt-get update && \
        sudo apt-get install -y \
          git \
          autotools-dev \
          automake \
          libtool \
          pkg-config \
          m4 \
          gettext \
          openssl \
          libssl-dev \
          libxml2-dev \
          vpnc-scripts

    - name: Install OpenConnect
      id: clone_openconnect
      shell: bash
      run: |
        if [ ! -d "openconnect" ]; then
          git clone https://gitlab.com/openconnect/openconnect.git
          echo "::set-output name=openconnect_path::$(pwd)/openconnect"
          cd openconnect
          git checkout v9.01
          ./autogen.sh
          ./version.sh version.c
          ./configure
          make -j$(nproc)
          sudo make install
          sudo ldconfig
        else
          echo "::set-output name=openconnect_path::$(pwd)/openconnect"
          cd openconnect
          make -j$(nproc)
          sudo make install
          sudo ldconfig
        fi

    - name: Cache OpenConnect build
      uses: actions/cache@v3
      with:
        path: ~/openconnect
        key: ${{ runner.os }}-openconnect-${{ hashFiles('${{ steps.clone_openconnect.outputs.openconnect_path }}/configure', '${{ steps.clone_openconnect.outputs.openconnect_path }}/autogen.sh', '${{ steps.clone_openconnect.outputs.openconnect_path }}/version.sh') }}
        restore-keys: |
          ${{ runner.os }}-openconnect-

    - name: Give execution permissions to entrypoint.sh
      shell: bash
      run: chmod +x ${{ github.action_path }}/entrypoint.sh

    - name: Run entrypoint.sh
      shell: bash
      run: ${{ github.action_path }}/entrypoint.sh "${{ inputs.fortissl }}" "${{ inputs.user }}" "${{ inputs.password }}" "${{ inputs.host }}" "${{ inputs.port }}" "${{ inputs.servercert }}" "${{ inputs.custom_command }}"